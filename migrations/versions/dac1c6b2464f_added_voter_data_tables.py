"""Added voter data tables

Revision ID: dac1c6b2464f
Revises: 5151f05a7bb9
Create Date: 2024-05-16 17:51:54.353754

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'dac1c6b2464f'
down_revision = '5151f05a7bb9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('house_number', sa.String(length=50), nullable=True),
    sa.Column('house_number_suffix', sa.String(length=3), nullable=True),
    sa.Column('street_name', sa.String(length=50), nullable=True),
    sa.Column('street_type', sa.String(length=100), nullable=True),
    sa.Column('direction', sa.String(length=50), nullable=True),
    sa.Column('post_direction', sa.String(length=50), nullable=True),
    sa.Column('apt_num', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip', sa.String(length=10), nullable=True),
    sa.Column('full_address_searchable', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='voters'
    )
    with op.batch_alter_table('address', schema='voters') as batch_op:
        batch_op.create_index(batch_op.f('ix_voters_address_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_voters_address_street_name'), ['street_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_voters_address_zip'), ['zip'], unique=False)

    op.create_table('locality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('locality_code', sa.String(length=3), nullable=True),
    sa.Column('locality_name', sa.String(length=255), nullable=True),
    sa.Column('precinct_code', sa.String(length=255), nullable=True),
    sa.Column('precinct_name', sa.String(length=255), nullable=True),
    sa.Column('town_code', sa.String(length=255), nullable=True),
    sa.Column('town_name', sa.String(length=255), nullable=True),
    sa.Column('town_prec_code', sa.String(length=255), nullable=True),
    sa.Column('town_prec_name', sa.String(length=255), nullable=True),
    sa.Column('congressional_district', sa.String(length=255), nullable=True),
    sa.Column('state_senate_district', sa.String(length=255), nullable=True),
    sa.Column('house_delegates_district', sa.String(length=255), nullable=True),
    sa.Column('super_district_code', sa.String(length=255), nullable=True),
    sa.Column('super_district_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='voters'
    )
    op.create_table('voters',
    sa.Column('identification_number', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('suffix', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('dob', sa.String(length=10), nullable=True),
    sa.Column('registration_date', sa.String(length=10), nullable=True),
    sa.Column('effective_date', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('residence_address_id', sa.Integer(), nullable=True),
    sa.Column('mailing_address_id', sa.Integer(), nullable=True),
    sa.Column('locality_id', sa.Integer(), nullable=True),
    sa.Column('full_name_searchable', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.ForeignKeyConstraint(['locality_id'], ['voters.locality.id'], ),
    sa.ForeignKeyConstraint(['mailing_address_id'], ['voters.address.id'], ),
    sa.ForeignKeyConstraint(['residence_address_id'], ['voters.address.id'], ),
    sa.PrimaryKeyConstraint('identification_number'),
    schema='voters'
    )
    with op.batch_alter_table('voters', schema='voters') as batch_op:
        batch_op.create_index(batch_op.f('ix_voters_voters_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_voters_voters_last_name'), ['last_name'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('voters', schema='voters') as batch_op:
        batch_op.drop_index(batch_op.f('ix_voters_voters_last_name'))
        batch_op.drop_index(batch_op.f('ix_voters_voters_first_name'))

    op.drop_table('voters', schema='voters')
    op.drop_table('locality', schema='voters')
    with op.batch_alter_table('address', schema='voters') as batch_op:
        batch_op.drop_index(batch_op.f('ix_voters_address_zip'))
        batch_op.drop_index(batch_op.f('ix_voters_address_street_name'))
        batch_op.drop_index(batch_op.f('ix_voters_address_city'))

    op.drop_table('address', schema='voters')
    op.drop_table('users', schema='security')
    # ### end Alembic commands ###
